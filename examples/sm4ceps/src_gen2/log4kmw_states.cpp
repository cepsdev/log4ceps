/* LOG4KMW_STATES.CPP 
   CREATED Tue May 24 15:43:11 2016

   GENERATED BY logspec2cpp VERSION 0.5 (c) Krauss-Maffei-Wegmann GmbH & Co. KG. 
   BASED ON CEPS VERSION 1.1 (Apr 30 2016) BUILT WITH GCC 4.9.0 on GNU/LINUX 64BIT (C) BY THE AUTHORS OF ceps (ceps is hosted at github: https://github.com/cepsdev/ceps.git) 
   THIS IS A GENERATED FILE. DO NOT MODIFY.
*/

jklklkllk
//#include "log4kmw_states.hpp"
sdhkjahakjdhaskdjh

std::mutex log4kmw_states::global_lock;
log4kmw::State<int> log4kmw_states::Current_event(0);
log4kmw::State<log4kmw::Dynamic_bitset> log4kmw_states::Current_states(32);
log4kmw::State<int> log4kmw_states::Synch_counter(0);

void log4kmw_states::write_state_Current_event( log4kmw_states::Current_event_t const & v)
{
  std::unique_lock<std::mutex> lock(global_lock);
  Current_event = v;
}

log4kmw_states::Current_event_t   log4kmw_states::read_state_Current_event()
{
  std::unique_lock<std::mutex> lock(global_lock);
  return log4kmw_states::Current_event;
}
log4kmw_states::Current_event_t   log4kmw_states::read_state_Current_event_no_lock()
{
  return log4kmw_states::Current_event;
}
void log4kmw_states::write_state_Current_states( log4kmw_states::Current_states_t const & v)
{
  std::unique_lock<std::mutex> lock(global_lock);
  Current_states = v;
}

log4kmw_states::Current_states_t   log4kmw_states::read_state_Current_states()
{
  std::unique_lock<std::mutex> lock(global_lock);
  return log4kmw_states::Current_states;
}
log4kmw_states::Current_states_t   log4kmw_states::read_state_Current_states_no_lock()
{
  return log4kmw_states::Current_states;
}
void log4kmw_states::write_state_Synch_counter( log4kmw_states::Synch_counter_t const & v)
{
  std::unique_lock<std::mutex> lock(global_lock);
  Synch_counter = v;
}

log4kmw_states::Synch_counter_t   log4kmw_states::read_state_Synch_counter()
{
  std::unique_lock<std::mutex> lock(global_lock);
  return log4kmw_states::Synch_counter;
}
log4kmw_states::Synch_counter_t   log4kmw_states::read_state_Synch_counter_no_lock()
{
  return log4kmw_states::Synch_counter;
}
