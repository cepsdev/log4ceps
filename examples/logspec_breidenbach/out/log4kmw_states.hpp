/* LOG4KMW_STATES.HPP 
   CREATED Wed Nov 25 19:28:32 2015

   GENERATED BY logspec2cpp VERSION 0.3 (c) Krauss-Maffei-Wegmann GmbH & Co. KG. 
   THIS IS A GENERATED FILE. DO NOT MODIFY.
*/


#ifndef LOG4KMW_STATES_HPP_INC
#define LOG4KMW_STATES_HPP_INC

#include "log4kmw_state.hpp"
#include<string>
#include<thread>
#include<mutex>

namespace log4kmw_states{
 extern std::mutex global_lock;
 extern log4kmw::State<int> APU_ECU_Communication;
 extern log4kmw::State<int> APU_ECU_InternalError;
 extern log4kmw::State<int> APU_UC_BoostStatus;
 extern log4kmw::State<int> APU_UC_Communication;
 extern log4kmw::State<int> APU_UC_LoadStatus;
 extern log4kmw::State<int> APU_UC_MonitoringStatus;
 extern log4kmw::State<int> APU_UC_PCB_Temperature;
 extern log4kmw::State<int> APU_UC_R_Temperature;
 extern log4kmw::State<int> APU_UC_Temperature;
 extern log4kmw::State<int> APU_UC_UnloadStatus;
 extern log4kmw::State<int> CAN_APUCU;
 extern log4kmw::State<int> CAN_APU_ECU;
 extern log4kmw::State<int> CAN_APU_Fan1;
 extern log4kmw::State<int> CAN_APU_Fan2;
 extern log4kmw::State<int> CAN_BAG10;
 extern log4kmw::State<int> CAN_FGR_IO_Platine;
 extern log4kmw::State<int> CAN_FGR_PowerSupply;
 extern log4kmw::State<int> CAN_FGR_VideoMatrix;
 extern log4kmw::State<int> CAN_ZLHV;
 extern log4kmw::State<int> CAN_ZWL_Ext;
 extern log4kmw::State<SI::Quantity<SI::Unit<1,0,-1,0,0,0,0> ,double> > CGW_FzGeschwindigkeit;
 extern log4kmw::State<SI::Quantity<SI::Unit<1,0,0,0,0,0,0> ,double> > CMK_Gesamtkilometer;
 extern log4kmw::State<int> HS_Stellung;
 extern log4kmw::State<int> IFISBMSStatus;
 extern log4kmw::State<int, double, std::string> Monitor_status;
 extern log4kmw::State<int> NavAliveStatus;
 extern log4kmw::State<int> RFH_CAN_Communication;
 extern log4kmw::State<int> RFH_Enable_Relais;
 extern log4kmw::State<int> RFH_Slider;
 extern log4kmw::State<int> RFH_Videosignal;
 extern log4kmw::State<std::string> Time_date;

 typedef log4kmw::State<int> APU_ECU_Communication_t;
 typedef log4kmw::State<int> APU_ECU_InternalError_t;
 typedef log4kmw::State<int> APU_UC_BoostStatus_t;
 typedef log4kmw::State<int> APU_UC_Communication_t;
 typedef log4kmw::State<int> APU_UC_LoadStatus_t;
 typedef log4kmw::State<int> APU_UC_MonitoringStatus_t;
 typedef log4kmw::State<int> APU_UC_PCB_Temperature_t;
 typedef log4kmw::State<int> APU_UC_R_Temperature_t;
 typedef log4kmw::State<int> APU_UC_Temperature_t;
 typedef log4kmw::State<int> APU_UC_UnloadStatus_t;
 typedef log4kmw::State<int> CAN_APUCU_t;
 typedef log4kmw::State<int> CAN_APU_ECU_t;
 typedef log4kmw::State<int> CAN_APU_Fan1_t;
 typedef log4kmw::State<int> CAN_APU_Fan2_t;
 typedef log4kmw::State<int> CAN_BAG10_t;
 typedef log4kmw::State<int> CAN_FGR_IO_Platine_t;
 typedef log4kmw::State<int> CAN_FGR_PowerSupply_t;
 typedef log4kmw::State<int> CAN_FGR_VideoMatrix_t;
 typedef log4kmw::State<int> CAN_ZLHV_t;
 typedef log4kmw::State<int> CAN_ZWL_Ext_t;
 typedef log4kmw::State<SI::Quantity<SI::Unit<1,0,-1,0,0,0,0> ,double> > CGW_FzGeschwindigkeit_t;
 typedef log4kmw::State<SI::Quantity<SI::Unit<1,0,0,0,0,0,0> ,double> > CMK_Gesamtkilometer_t;
 typedef log4kmw::State<int> HS_Stellung_t;
 typedef log4kmw::State<int> IFISBMSStatus_t;
 typedef log4kmw::State<int, double, std::string> Monitor_status_t;
 typedef log4kmw::State<int> NavAliveStatus_t;
 typedef log4kmw::State<int> RFH_CAN_Communication_t;
 typedef log4kmw::State<int> RFH_Enable_Relais_t;
 typedef log4kmw::State<int> RFH_Slider_t;
 typedef log4kmw::State<int> RFH_Videosignal_t;
 typedef log4kmw::State<std::string> Time_date_t;

 void write_state_APU_ECU_Communication(APU_ECU_Communication_t const &);
 APU_ECU_Communication_t   read_state_APU_ECU_Communication(); 
 APU_ECU_Communication_t   read_state_APU_ECU_Communication_no_lock(); 
 void write_state_APU_ECU_InternalError(APU_ECU_InternalError_t const &);
 APU_ECU_InternalError_t   read_state_APU_ECU_InternalError(); 
 APU_ECU_InternalError_t   read_state_APU_ECU_InternalError_no_lock(); 
 void write_state_APU_UC_BoostStatus(APU_UC_BoostStatus_t const &);
 APU_UC_BoostStatus_t   read_state_APU_UC_BoostStatus(); 
 APU_UC_BoostStatus_t   read_state_APU_UC_BoostStatus_no_lock(); 
 void write_state_APU_UC_Communication(APU_UC_Communication_t const &);
 APU_UC_Communication_t   read_state_APU_UC_Communication(); 
 APU_UC_Communication_t   read_state_APU_UC_Communication_no_lock(); 
 void write_state_APU_UC_LoadStatus(APU_UC_LoadStatus_t const &);
 APU_UC_LoadStatus_t   read_state_APU_UC_LoadStatus(); 
 APU_UC_LoadStatus_t   read_state_APU_UC_LoadStatus_no_lock(); 
 void write_state_APU_UC_MonitoringStatus(APU_UC_MonitoringStatus_t const &);
 APU_UC_MonitoringStatus_t   read_state_APU_UC_MonitoringStatus(); 
 APU_UC_MonitoringStatus_t   read_state_APU_UC_MonitoringStatus_no_lock(); 
 void write_state_APU_UC_PCB_Temperature(APU_UC_PCB_Temperature_t const &);
 APU_UC_PCB_Temperature_t   read_state_APU_UC_PCB_Temperature(); 
 APU_UC_PCB_Temperature_t   read_state_APU_UC_PCB_Temperature_no_lock(); 
 void write_state_APU_UC_R_Temperature(APU_UC_R_Temperature_t const &);
 APU_UC_R_Temperature_t   read_state_APU_UC_R_Temperature(); 
 APU_UC_R_Temperature_t   read_state_APU_UC_R_Temperature_no_lock(); 
 void write_state_APU_UC_Temperature(APU_UC_Temperature_t const &);
 APU_UC_Temperature_t   read_state_APU_UC_Temperature(); 
 APU_UC_Temperature_t   read_state_APU_UC_Temperature_no_lock(); 
 void write_state_APU_UC_UnloadStatus(APU_UC_UnloadStatus_t const &);
 APU_UC_UnloadStatus_t   read_state_APU_UC_UnloadStatus(); 
 APU_UC_UnloadStatus_t   read_state_APU_UC_UnloadStatus_no_lock(); 
 void write_state_CAN_APUCU(CAN_APUCU_t const &);
 CAN_APUCU_t   read_state_CAN_APUCU(); 
 CAN_APUCU_t   read_state_CAN_APUCU_no_lock(); 
 void write_state_CAN_APU_ECU(CAN_APU_ECU_t const &);
 CAN_APU_ECU_t   read_state_CAN_APU_ECU(); 
 CAN_APU_ECU_t   read_state_CAN_APU_ECU_no_lock(); 
 void write_state_CAN_APU_Fan1(CAN_APU_Fan1_t const &);
 CAN_APU_Fan1_t   read_state_CAN_APU_Fan1(); 
 CAN_APU_Fan1_t   read_state_CAN_APU_Fan1_no_lock(); 
 void write_state_CAN_APU_Fan2(CAN_APU_Fan2_t const &);
 CAN_APU_Fan2_t   read_state_CAN_APU_Fan2(); 
 CAN_APU_Fan2_t   read_state_CAN_APU_Fan2_no_lock(); 
 void write_state_CAN_BAG10(CAN_BAG10_t const &);
 CAN_BAG10_t   read_state_CAN_BAG10(); 
 CAN_BAG10_t   read_state_CAN_BAG10_no_lock(); 
 void write_state_CAN_FGR_IO_Platine(CAN_FGR_IO_Platine_t const &);
 CAN_FGR_IO_Platine_t   read_state_CAN_FGR_IO_Platine(); 
 CAN_FGR_IO_Platine_t   read_state_CAN_FGR_IO_Platine_no_lock(); 
 void write_state_CAN_FGR_PowerSupply(CAN_FGR_PowerSupply_t const &);
 CAN_FGR_PowerSupply_t   read_state_CAN_FGR_PowerSupply(); 
 CAN_FGR_PowerSupply_t   read_state_CAN_FGR_PowerSupply_no_lock(); 
 void write_state_CAN_FGR_VideoMatrix(CAN_FGR_VideoMatrix_t const &);
 CAN_FGR_VideoMatrix_t   read_state_CAN_FGR_VideoMatrix(); 
 CAN_FGR_VideoMatrix_t   read_state_CAN_FGR_VideoMatrix_no_lock(); 
 void write_state_CAN_ZLHV(CAN_ZLHV_t const &);
 CAN_ZLHV_t   read_state_CAN_ZLHV(); 
 CAN_ZLHV_t   read_state_CAN_ZLHV_no_lock(); 
 void write_state_CAN_ZWL_Ext(CAN_ZWL_Ext_t const &);
 CAN_ZWL_Ext_t   read_state_CAN_ZWL_Ext(); 
 CAN_ZWL_Ext_t   read_state_CAN_ZWL_Ext_no_lock(); 
 void write_state_CGW_FzGeschwindigkeit(CGW_FzGeschwindigkeit_t const &);
 CGW_FzGeschwindigkeit_t   read_state_CGW_FzGeschwindigkeit(); 
 CGW_FzGeschwindigkeit_t   read_state_CGW_FzGeschwindigkeit_no_lock(); 
 void write_state_CMK_Gesamtkilometer(CMK_Gesamtkilometer_t const &);
 CMK_Gesamtkilometer_t   read_state_CMK_Gesamtkilometer(); 
 CMK_Gesamtkilometer_t   read_state_CMK_Gesamtkilometer_no_lock(); 
 void write_state_HS_Stellung(HS_Stellung_t const &);
 HS_Stellung_t   read_state_HS_Stellung(); 
 HS_Stellung_t   read_state_HS_Stellung_no_lock(); 
 void write_state_IFISBMSStatus(IFISBMSStatus_t const &);
 IFISBMSStatus_t   read_state_IFISBMSStatus(); 
 IFISBMSStatus_t   read_state_IFISBMSStatus_no_lock(); 
 void write_state_Monitor_status(Monitor_status_t const &);
 Monitor_status_t   read_state_Monitor_status(); 
 Monitor_status_t   read_state_Monitor_status_no_lock(); 
 void write_state_NavAliveStatus(NavAliveStatus_t const &);
 NavAliveStatus_t   read_state_NavAliveStatus(); 
 NavAliveStatus_t   read_state_NavAliveStatus_no_lock(); 
 void write_state_RFH_CAN_Communication(RFH_CAN_Communication_t const &);
 RFH_CAN_Communication_t   read_state_RFH_CAN_Communication(); 
 RFH_CAN_Communication_t   read_state_RFH_CAN_Communication_no_lock(); 
 void write_state_RFH_Enable_Relais(RFH_Enable_Relais_t const &);
 RFH_Enable_Relais_t   read_state_RFH_Enable_Relais(); 
 RFH_Enable_Relais_t   read_state_RFH_Enable_Relais_no_lock(); 
 void write_state_RFH_Slider(RFH_Slider_t const &);
 RFH_Slider_t   read_state_RFH_Slider(); 
 RFH_Slider_t   read_state_RFH_Slider_no_lock(); 
 void write_state_RFH_Videosignal(RFH_Videosignal_t const &);
 RFH_Videosignal_t   read_state_RFH_Videosignal(); 
 RFH_Videosignal_t   read_state_RFH_Videosignal_no_lock(); 
 void write_state_Time_date(Time_date_t const &);
 Time_date_t   read_state_Time_date(); 
 Time_date_t   read_state_Time_date_no_lock(); 
}

#endif
